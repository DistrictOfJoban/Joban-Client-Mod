plugins {
    id 'fabric-loom' version '1.5-SNAPSHOT'
}

loom {
    runConfigs.configureEach {
        ideConfigGenerated = true
    }
}

base {
    archivesName = "${rootProject.archives_base_name}-fabric"
}

repositories {
    maven { url = "https://maven.terraformersmc.com/" }
}

def yarn_version = project.properties["yarn_mappings_${rootProject.minecraft_version}"]
def fabric_api_version = project.properties["fabric_api_version_${rootProject.minecraft_version}"]
def mod_menu_version = project.properties["mod_menu_version_${rootProject.minecraft_version}"]

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
    mappings "net.fabricmc:yarn:${yarn_version}:v2"
    shadowImplementation "org.mtr:Minecraft-Mappings-fabric-${rootProject.minecraft_version}:0.0.1-dev"
    modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}"
    modApi "com.terraformersmc:modmenu:${mod_menu_version}"
}

processResources {
    inputs.property "version", version
    inputs.property "minecraft_version", rootProject.minecraft_version

    filesMatching("fabric.mod.json") {
        expand (
                "version": version,
                "minecraft_version": rootProject.minecraft_version
        )
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 8
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

jar {
    from("LICENSE") {
        rename { "${it}_${base.archivesName.get()}"}
    }
}

remapJar {
    dependsOn(shadowJar)
    mustRunAfter(shadowJar)
    inputFile = file(shadowJar.archivePath)
}

tasks.register('moveBuildFile', Copy) {
    from "${project.projectDir}/build/libs/${base.archivesName.get()}-${version}.jar"
    into "${rootProject.projectDir}/build"
}

build {
    finalizedBy moveBuildFile
}