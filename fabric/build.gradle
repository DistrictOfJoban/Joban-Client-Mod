plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
}

loom {
    runConfigs.configureEach { ideConfigGenerated = true }
}

repositories {
    maven { url = "https://maven.terraformersmc.com/" }
}

def yarn_version = project.properties["yarn_mappings_${rootProject.minecraft_version}"]
def fabric_api_version = project.properties["fabric_api_version_${rootProject.minecraft_version}"]
def mod_menu_version = project.properties["mod_menu_version_${rootProject.minecraft_version}"]

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
    mappings "net.fabricmc:yarn:${yarn_version}:v2"
    modImplementation "org.mtr:MTR-fabric:${rootProject.mtr_version}+${rootProject.minecraft_version}"
    modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}"
    modApi "com.terraformersmc:modmenu:${mod_menu_version}"
    annotationProcessor 'systems.manifold:manifold-preprocessor:2023.1.33' // Delibrate: Newer versions just throws an error *when displaying an compiling error*
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = java_version
}

configurations.configureEach {
    // Force use our version of mod-loader even if dependency requires a lower mod-loader so the game can launch
    // May cause problems, but they're usually backward compatible
    resolutionStrategy {
        force("net.fabricmc:fabric-loader:$project.fabric_loader_version")
    }
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

jar {
    from("LICENSE") {
        rename { "${it}_${base.archivesName.get()}"}
    }
}

build {
    finalizedBy moveBuildFile
}